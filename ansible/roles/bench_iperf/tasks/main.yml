---
# tasks file for bench_iperf

# The following includes are necessary, because loops don't work with blocks
# So the tasks are nested in subtasks to create nested loops
#
# Nested Loops
# Ressource Limit     - use bench_iperf__resource_limits and set bench_loop_target_reccource_limit <- this file
# Runtime            - use bench_iperf__runtimes and set bench_loop_target_runtime
# Container           - use bench_iperf__target_images and set bench_loop_target_image_name
# Number of instances - no varables set or used   
# repeat              - repeats the bechmark as long as bench_iperf__repeat and set bench_loop_repeat_number
# benchmark           - do the real benchmark 


- name: Promt delete benchmark results
  pause: 
    prompt: "Please confirm you want to remove all possibly existing benchmark results in {{ bench_iperf__result_path }}! Press return to continue. Press Ctrl+c and then 'a' to abort"
  when: bench_iperf__skip_deletion_result_folder_promt == false

- name: Clean benchmark result path
  file:
    state: absent
    path: "{{ bench_iperf__result_path }}/"
  delegate_to: ansible
  delegate_facts: True

- name: Create Image Cache Folder with the right permissons
  file:
    path: "{{ create_benchmark_images__archive_folder }}"
    state: directory
    recurse: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  delegate_to: ansible
  delegate_facts: True

- name: get images from remote system
  fetch:
    src: "{{ create_benchmark_images__archive_folder }}/bench-iperf-legacy.tar"
    dest: "{{ create_benchmark_images__archive_folder }}/bench-iperf-legacy.tar"
    flat: yes
    fail_on_missing: yes
  become: false # become false is needed. otherwise the ram consumption doubles and it leads to memory errors

- name: Load iperf docker images from archive
  docker_image:
    name: "bench-iperf"
    tag: 1
    push: no
    load_path: "{{ create_benchmark_images__archive_folder }}/bench-iperf-legacy.tar"
    source: load
  delegate_to: 127.0.0.1
  delegate_facts: True

- name: Load iperf docker images from archive
  docker_image:
    name: "bench-iperf"
    tag: 1
    push: no
    load_path: "{{ create_benchmark_images__archive_folder }}/bench-iperf-legacy.tar"
    source: load

- name: iperf3 Bench ressorce limit loop
  include_tasks: runtimes.yml
  loop: "{{ bench_iperf__resource_limits }}"
  loop_control:
    loop_var: bench_loop_target_reccource_limit

- name: Clean benchmark result path
  file:
    state: absent
    path: "{{ apachebench__result_path }}/"



